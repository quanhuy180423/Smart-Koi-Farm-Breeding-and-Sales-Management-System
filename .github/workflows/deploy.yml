name: Deploy to Vercel

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npx tsc --noEmit

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Deploy to Vercel (Preview)
        if: github.ref != 'refs/heads/main'
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ZVwNp6hM9dxNP2nzkW954p5i
          vercel-org-id: lLuqx6D3TS0enZtsyNE1m9Lb
          vercel-project-id: prj_DPukNxPKqqToGPSy2iIf9tholj9H
          vercel-args: "--prod=false"

      - name: Deploy to Vercel (Production)
        if: github.ref == 'refs/heads/main'
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ZVwNp6hM9dxNP2nzkW954p5i
          vercel-org-id: lLuqx6D3TS0enZtsyNE1m9Lb
          vercel-project-id: prj_DPukNxPKqqToGPSy2iIf9tholj9H
          vercel-args: "--prod=true"

      - name: Comment PR with deployment URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const deploymentComment = comments.find(comment =>
              comment.body.includes('ðŸš€ Deployed to Vercel')
            );

            if (deploymentComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: deploymentComment.id,
                body: `ðŸš€ Deployed to Vercel\n\n**Preview URL:** https://cp-kfbs-fe-web-${context.issue.number}.vercel.app\n\n**Build Status:** âœ… Success\n\n**Commit:** ${context.sha.substring(0, 7)}`
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `ðŸš€ Deployed to Vercel\n\n**Preview URL:** https://cp-kfbs-fe-web-${context.issue.number}.vercel.app\n\n**Build Status:** âœ… Success\n\n**Commit:** ${context.sha.substring(0, 7)}`
              });
            }
